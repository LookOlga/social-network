{"version":3,"sources":["components/common/FormsControls/FormsControls.js","utils/validation/validator.js","components/hoc/withAuthRedirect.js","components/Messages/Messages.js","components/Messages/MessagesContainer.js"],"names":["FormControl","input","meta","children","touched","error","hasError","className","Textarea","props","restProps","child","Input","required","value","maxLengthCreator","maxLength","length","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","maxLength100","MessagesReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","placeholder","component","name","validate","Messages","messagesPage","messageElements","messages","map","message","id","dialogElements","dialogs","dialog","src","values","addNewMessage","newMessage","MessagesContainer","compose","dispatch","addNewMessageBodyCreator"],"mappings":"2RAEMA,EAAc,SAAC,GAA4B,EAA3BC,MAA4B,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,SACxBC,EAAkBF,EAAlBE,QAASC,EAASH,EAATG,MACVC,EAAWF,GAAWC,EAC5B,OACI,sBAAKE,UAAW,iBAAwBD,EAAW,QAAU,IAA7D,UACKH,EACAG,GAAY,+BAAOD,QAInBG,EAAW,SAACC,GACrB,IAAOR,EAAoCQ,EAApCR,MAAuBS,GAAaD,EAA7BP,KAA6BO,EAAvBE,MAApB,YAA2CF,EAA3C,IACA,OACI,cAACT,EAAD,2BAAiBS,GAAjB,aACI,oDAAcR,GAAWS,QAMxBE,EAAQ,SAACH,GAClB,IAAOR,EAAoCQ,EAApCR,MAAuBS,GAAaD,EAA7BP,KAA6BO,EAAvBE,MAApB,YAA2CF,EAA3C,IACA,OACA,cAACT,EAAD,2BAAiBS,GAAjB,aACI,iDAAWR,GAAWS,S,uDC1B9B,oEAAO,IAAMG,EAAU,SAAAC,GACnB,IAAGA,EAGH,MAAO,qBAIEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAGA,EAAMG,OAASD,EAAW,MAAO,gBAAkBA,EAAY,a,oJCJhEE,EAA6B,SAACC,GAChC,MAAO,CACHC,OAAQD,EAAME,KAAKD,SAIdE,EAAmB,SAACC,GAAe,IACtCC,EADqC,4JAEvC,WACI,OAAIC,KAAKhB,MAAMW,OAER,cAACG,EAAD,eAAeE,KAAKhB,QAFG,cAAC,IAAD,CAAUiB,GAAI,eAHT,GACXC,IAAMJ,WAUtC,OAFwCK,YAAQV,EAARU,CAAoCJ,K,kJCX1EK,EAAed,YAAiB,KAqDhCe,EAAoBC,YAAU,CAChCC,KAAM,YADgBD,EAdL,SAACtB,GAClB,IAAOwB,EAAgBxB,EAAhBwB,aACP,OACI,uBAAMC,SAAUD,EAAc1B,UAAU,eAAxC,UACG,cAAC4B,EAAA,EAAD,CAAO5B,UAAU,sBACJ6B,YAAY,wBACZC,UAAW7B,IACX8B,KAAM,aACNC,SAAU,CAAC1B,IAAUgB,KACjC,wBAAQtB,UAAU,oBAAlB,wBASGiC,EAxDE,SAAC/B,GACd,IAAIU,EAAQV,EAAMgC,aACZC,EAAkBvB,EAAMwB,SAASC,KAAI,SAAAC,GAAO,OAAI,oBAAqBtC,UAAU,iBAA/B,SAAiDsC,EAAQA,SAAhDA,EAAQC,OACjEC,EAAiB5B,EAAM6B,QAAQJ,KAAI,SAAAK,GAAM,OAC3C,qBAAoB1C,UAAU,gBAA9B,UACI,qBAAKA,UAAU,kBAAf,SACI,qBAAK2C,IAAI,kDAEb,cAAC,IAAD,CAASxB,GAAI,YAAcuB,EAAOH,GAAlC,SAAuCG,EAAOX,SAJzCW,EAAOH,OAYpB,OAAIrC,EAAMW,OAEP,sBAAKb,UAAU,oBAAf,UACK,oBAAIA,UAAU,mBAAd,qBACF,sBAAKA,UAAU,oBAAf,UACI,qBAAKA,UAAU,UAAf,SACI,oBAAIA,UAAU,iBAAd,SACKwC,MAGT,qBAAKxC,UAAU,WAAf,SACI,oBAAIA,UAAU,kBAAd,SACKmC,SAMZ,cAACZ,EAAD,CAAmBI,SAtBH,SAACiB,GACpB1C,EAAM2C,cAAcD,EAAOE,kBAGN,cAAC,IAAD,CAAU3B,GAAI,Y,yBCHrC4B,EAAoBC,YACtB3B,aAfoB,SAACT,GACrB,MAAO,CACHsB,aAActB,EAAMsB,iBAID,SAACe,GACxB,MAAO,CACHJ,cAAe,SAACC,GACZG,EAASC,YAAyBJ,SAO1C/B,IAFsBiC,CAGxBf,GAMac","file":"static/js/5.4c23bb1b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './form-controls.css';\r\nconst FormControl = ({input, meta, children}) => {\r\n    const {touched, error} = meta;\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={\"form-control\" + \" \" + (hasError ? \"error\" : \"\")}>\r\n            {children}\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <textarea {...input} {...restProps} />\r\n        </FormControl>\r\n          \r\n    )\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return (\r\n    <FormControl {...props}>\r\n        <input {...input} {...restProps}/>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\n","export const required= value => {\r\n    if(value) {\r\n        return undefined;\r\n    }\r\n    return 'Field is required';\r\n}\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value.length > maxLength) return \"Max length is\" + maxLength + \"symbols\";\r\n    return undefined;\r\n}\r\n","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to={\"/login\"}/>\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    const ConnectedAuthRedirectComponent  = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React, {Component} from 'react';\r\n\r\nimport './messages.css';\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validation/validator\";\r\n\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\nconst Messages = (props) => {\r\n    let state = props.messagesPage;\r\n    const messageElements = state.messages.map(message => <li key={message.id} className=\"messages__item\">{message.message}</li>);\r\n    const dialogElements = state.dialogs.map(dialog =>\r\n        <li key={dialog.id} className=\"dialogs__item\">\r\n            <div className=\"dialogs__avatar\">\r\n                <img src=\"https://images.app.goo.gl/x1HjNjZABTm4CZ3C7\"/>\r\n            </div>\r\n            <NavLink to={\"/dialogs/\" + dialog.id}>{dialog.name}</NavLink>\r\n        </li>);\r\n\r\n\r\n    const sendNewMessage = (values) => {\r\n        props.addNewMessage(values.newMessage);\r\n    }\r\n\r\n    if(!props.isAuth) return <Redirect to={\"/login\"}/>\r\n    return (\r\n       <div className=\"messages__wrapper\">\r\n            <h3 className=\"component__title\">Dialogs</h3>\r\n          <div className=\"messages__content\">\r\n              <div className=\"dialogs\">\r\n                  <ul className=\"dialogs__items\">\r\n                      {dialogElements}\r\n                  </ul>\r\n              </div>\r\n              <div className=\"messages\">\r\n                  <ul className=\"messages__items\">\r\n                      {messageElements}\r\n                  </ul>\r\n              </div>\r\n              {/*<DialogItems dialogs={props.state.dialogs}/>*/}\r\n              {/*  <MessageItems messages={props.state.messages} />*/}\r\n          </div>\r\n           <MessagesReduxForm onSubmit={sendNewMessage}/>\r\n       </div>\r\n    )\r\n}\r\nconst MessagesForm = (props) => {\r\n    const {handleSubmit} = props;\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"message-form\">\r\n           <Field className=\"message-form__field\"\r\n                        placeholder=\"Write your message...\"\r\n                        component={Textarea}\r\n                        name={\"newMessage\"}\r\n                        validate={[required, maxLength100]}/>\r\n            <button className=\"message-form__btn\">Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MessagesReduxForm = reduxForm({\r\n    form: 'messages'\r\n})(MessagesForm);\r\n\r\nexport default Messages;","import React, {Component} from 'react';\r\n\r\nimport {addNewMessageBodyCreator, updateMessageBodyCreator} from \"../../redux/messagesReducer\";\r\nimport Messages from \"./Messages\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addNewMessage: (newMessage) => {\r\n            dispatch(addNewMessageBodyCreator(newMessage));\r\n        }\r\n    }\r\n}\r\n\r\nconst MessagesContainer = compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Messages)\r\n\r\n// const AuthRedirectComponent = withAuthRedirect(Messages);\r\n//\r\n// const MessagesContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\r\n\r\nexport default MessagesContainer;"],"sourceRoot":""}