{"version":3,"sources":["components/Header/Header.js","components/Header/HeaderContainer.js","components/Sidebar/FriendsPanel/FriendsPanel.js","components/Sidebar/Sidebar.js","components/Sidebar/SidebarContainer.js","redux/appReducer.js","redux/sidebarReducer.js","redux/redux-store.js","App.js","index.js","redux/authReducer.js","assets/images/spinner/spinner.svg","components/common/Preloader/Preloader.js","redux/profileReducer.js","redux/messagesReducer.js","redux/usersReducer.js","api/api.js"],"names":["Header","props","className","isAuth","login","onClick","logout","to","HeaderContainerAPI","this","React","Component","HeaderContainer","connect","state","auth","FriendsPanel","friendsElements","sidebar","friends","map","friend","src","name","Sidebar","href","SidebarContainer","SET_INITIALIZING","initialState","initializing","appReducer","action","type","stateCopy","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","messagesPage","messagesReducer","usersPage","usersReducer","authReducer","form","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","MessagesContainer","lazy","ProfileContainer","UsersContainer","LoginPage","App","initialize","path","render","fallback","Preloader","AppContainer","withRouter","dispatch","promise","getAuthUserData","Promise","all","then","MainApp","basename","process","ReactDOM","document","getElementById","SET_AUTH_USER_DATA","userId","email","setAuthUserData","payload","a","authAPI","getUserData","data","resultCode","id","password","rememberMe","logIn","message","messages","length","stopSubmit","_error","logOut","preloader","ADD_POST","SET_USER_PROFILE","SET_USER_STATUS","posts","postText","profile","status","addPostActionCreator","newPost","setUserStatus","getUserProfile","profileAPI","getProfile","getUserStatus","getStatus","updateUserStatus","updateStatus","ADD_MESSAGE","dialogs","addNewMessageBodyCreator","newMessage","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","pageSize","totalUsersCount","currentPage","isFetching","isFollowingProgress","follow","unfollow","setCurrentPage","toggleIsFetching","toggleIsFollowingProgress","getUsers","page","usersAPI","items","totalCount","followUnfollowFlow","apiMethod","actionCreator","unfollowUser","bind","followUser","user","followed","filter","instance","axios","withCredentials","baseURL","headers","get","response","put","delete","post"],"mappings":"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","file":"static/js/main.7fa6b0fa.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport './header.css';\r\n\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className=\"header\">\r\n            <div className=\"header__logo\">\r\n                <a className=\"header__icon\" >Comma</a>\r\n            </div>\r\n            <div className=\"header__login\">\r\n                {props.isAuth ?\r\n                    <div>\r\n                        {props.login}\r\n                        <button className=\"header__link header__link--logout\" onClick={props.logout}>Log Out</button>\r\n                    </div> :\r\n                    <NavLink to={'/login'} className=\"header__link\">Log In</NavLink> }\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/authReducer\";\r\n\r\n\r\n\r\nclass HeaderContainerAPI extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login\r\n    }\r\n}\r\n\r\nconst HeaderContainer = connect(mapStateToProps,{logout})(HeaderContainerAPI);\r\n\r\nexport default HeaderContainer;","import React, {Component} from 'react';\r\n\r\nimport './friends-panel.css';\r\n\r\nconst FriendsPanel = (props) => {\r\n    let state = props.sidebar;\r\n    const friendsElements = state.friends.map(friend => <li className=\"friends-panel__item\">\r\n         <div className=\"friends-panel__avatar\">\r\n                <img src=\"https://images.app.goo.gl/x1HjNjZABTm4CZ3C7\"/>\r\n            </div>\r\n        <div className=\"friends-panel__name\">{friend.name}</div>\r\n    </li>)\r\n    return (\r\n        <div className=\"friends-panel\">\r\n            <ul className=\"friends-panel__items\">\r\n                {friendsElements}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FriendsPanel;","import React, {Component} from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport FriendsPanel from './FriendsPanel/FriendsPanel';\r\n\r\n\r\nimport './sidebar.css';\r\n\r\nconst Sidebar = (props) => {\r\n    return (\r\n        <nav className=\"sidebar\">\r\n            <div className=\"sidebar__links\">\r\n                <NavLink className=\"sidebar__link\" to=\"/profile\">Profile</NavLink>\r\n                <NavLink className=\"sidebar__link\" to=\"/messages\">Messages</NavLink>\r\n                <NavLink className=\"sidebar__link\" to=\"/users\">Users</NavLink>\r\n                <a className=\"sidebar__link\" href=\"#\">News</a>\r\n                <a className=\"sidebar__link\" href=\"#\">Music</a>\r\n                <a className=\"sidebar__link\" href=\"#\">Settings</a>\r\n            </div>\r\n            <FriendsPanel sidebar={props.sidebar} />\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Sidebar;","import React, {Component} from 'react';\r\n\r\nimport Sidebar from \"./Sidebar\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapPropsToState = (state) => {\r\n    return {\r\n        sidebar: state.sidebar\r\n    }\r\n}\r\nconst SidebarContainer = connect(mapPropsToState)(Sidebar);\r\n\r\nexport default SidebarContainer;","import React from \"react\";\r\nimport {getAuthUserData} from \"./authReducer\";\r\n\r\nconst SET_INITIALIZING = 'SET-INITIALIZING ';\r\n\r\nlet initialState = {\r\n    initializing: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_INITIALIZING : {\r\n            let stateCopy = {\r\n                ...state,\r\n                initializing: true\r\n            }\r\n            return stateCopy;\r\n        }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setInitializing = () => ({\r\n    type: SET_INITIALIZING\r\n})\r\n\r\nexport const initialize = () => {\r\n    return (dispatch) => {\r\n        let promise = dispatch(getAuthUserData());\r\n        Promise.all([promise])\r\n            .then(() => {\r\n            dispatch(setInitializing());\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport default appReducer;","let initialState = {\r\n    friends: [\r\n        {\r\n            name: \"Sasha Torn\"\r\n        },\r\n        {\r\n            name: \"Hope Smith\"\r\n        },\r\n        {\r\n            name: \"John Campbell\"\r\n        },\r\n        {\r\n            name: \"Alex Vega\"\r\n        },\r\n        {\r\n            name: \"Tom Burkard\"\r\n        },\r\n        {\r\n            name: \"Billy Torton\"\r\n        }\r\n    ]\r\n}\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, createStore, compose} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport messagesReducer from \"./messagesReducer\";\r\nimport sidebarReducer from \"./sidebarReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport appReducer from \"./appReducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: messagesReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nlet store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;","import React, {Suspense} from \"react\";\nimport {HashRouter, BrowserRouter, Route, withRouter} from \"react-router-dom\";\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport SidebarContainer from \"./components/Sidebar/SidebarContainer\";\n// import MessagesContainer from './components/Messages/MessagesContainer';\n// import UsersContainer from \"./components/Users/UsersContainer\";\n// import ProfileContainer from \"./components/Profile/ProfileContainer\";\n// import LoginPage from \"./components/Login/Login\";\nimport {initialize} from \"../../social-network/src/redux/appReducer\";\n\nimport './App.css';\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./redux/redux-store\";\n\nconst MessagesContainer = React.lazy(() => import(\"./components/Messages/MessagesContainer\"));\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"));\nconst UsersContainer = React.lazy(() => import(\"./components/Users/UsersContainer\"));\nconst LoginPage = React.lazy(() => import(\"./components/Login/Login\"));\n\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initialize();\n    }\n\n    render() {\n        if(!this.props.initializing) return <Preloader/>\n        return (\n            <div className=\"app-wrapper\">\n                <HeaderContainer/>\n                <SidebarContainer/>\n                <main className=\"app-wrapper__content\">\n                    <Route path=\"/profile/:userId?\" render={() => {\n                        return <Suspense fallback={<Preloader/>}>\n                                    <ProfileContainer/>\n                            </Suspense>\n                    }}/>\n                    <Route path=\"/messages\" render={() => {\n                        return <Suspense fallback={<Preloader/>}>\n                            <MessagesContainer/>\n                        </Suspense>\n                    }}/>\n                    <Route path=\"/users\" render={() => {\n                        return <Suspense fallback={<Preloader/>}>\n                            <UsersContainer/>\n                        </Suspense>\n                    }}/>\n                    <Route path=\"/login\" render={() => {\n                        return <Suspense fallback={<Preloader/>}>\n                            <LoginPage/>\n                        </Suspense>\n                    }}/>\n                </main>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        initializing: state.app.initializing\n    }\n}\nconst AppContainer =  compose(\n    withRouter,\n    connect(mapStateToProps, {initialize}))(App);\n\nconst MainApp = (props) => {\n    return   <HashRouter basename={process.env.PUBLIC_URL}>\n        <Provider store={store}>\n            <AppContainer />\n        </Provider>\n    </HashRouter>\n}\n\nexport default MainApp;\n","import React from 'react';\nimport ReactDOM from \"react-dom\";\n\nimport './index.css';\nimport MainApp from \"./App\";\n\n\n\n\nReactDOM.render(\n   <MainApp />,\n    document.getElementById('root')\n);\n\n\n// let rerenderEntireTree = () => {\n//     ReactDOM.render(\n//         <BrowserRouter>\n//             <Provider store={store}>\n//                 <App />\n//             </Provider>\n//         </BrowserRouter>,\n//         document.getElementById('root')\n//     );\n// }\n//\n// rerenderEntireTree(store.getState());\n\n// store.subscribe(() => {\n//     let state = store.getState();\n//     rerenderEntireTree(state);\n// });\n\n\n","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_AUTH_USER_DATA = 'auth/SET-AUTH-USER-DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA: {\r\n            let stateCopy = {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n            return stateCopy;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => {\r\n    return {\r\n        type: SET_AUTH_USER_DATA,\r\n        payload: {\r\n            userId,\r\n            email,\r\n            login,\r\n            isAuth\r\n        }\r\n    }\r\n}\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    const data = await authAPI.getUserData()\r\n    if (data.resultCode === 0) {\r\n        const {id, email, login} = data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    const data = await authAPI.logIn(email, password, rememberMe);\r\n    if (data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        let message = data.messages.length > 0 ? data.messages[0] : 'Something went wrong'\r\n        const action = stopSubmit('login', {_error: message});\r\n        dispatch(action);\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    const data = await authAPI.logOut();\r\n    if (data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\n\r\n// export const logout = () => {\r\n//     return (dispatch) => {\r\n//         authAPI.logOut().then(data => {\r\n//             if(data.resultCode === 0) {\r\n//                 dispatch(setAuthUserData(null, null, null, false))\r\n//             }\r\n//         })\r\n//     }\r\n// }\r\n\r\nexport default authReducer;","export default __webpack_public_path__ + \"static/media/spinner.241a2171.svg\";","import React from \"react\";\r\nimport preloader from \"../../../assets/images/spinner/spinner.svg\";\r\n\r\nimport './preloader.css';\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <div className=\"preloader\">\r\n            <img src={preloader}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","import {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'profile/ADD-POST';\r\nconst SET_USER_PROFILE = 'profile/SET-USER-PROFILE';\r\nconst SET_USER_STATUS = 'profile/SET-USER-STATUS';\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {\r\n            id: 1,\r\n            name: \"Sasha Torn\",\r\n            postText: \"Существуют две основные трактовки понятия «текст»: имманентная (расширенная, философски нагруженная) и репрезентативная (более частная).\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Hope Smith\",\r\n            postText: \"Имманентный подход подразумевает отношение к тексту как к автономной реальности, нацеленность на выявление его внутренней структуры.\"\r\n        }\r\n\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n}\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 3,\r\n                name: \"Tom Burkard\",\r\n                postText: action.newPost\r\n            }\r\n\r\n            let stateCopy = {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            };\r\n            return stateCopy;\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            let stateCopy = {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n            return stateCopy;\r\n        }\r\n        case SET_USER_STATUS: {\r\n            let stateCopy = {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n            return stateCopy;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPost) => {\r\n    return {\r\n        type: ADD_POST,\r\n        newPost\r\n    }\r\n}\r\n\r\nexport const setUserProfile = (profile) => {\r\n    return {\r\n        type: SET_USER_PROFILE,\r\n        profile\r\n    }\r\n}\r\n\r\nexport const setUserStatus = (status) => {\r\n    return {\r\n        type: SET_USER_STATUS,\r\n        status\r\n    }\r\n}\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const data = await profileAPI.getProfile(userId);\r\n    dispatch(setUserProfile(data));\r\n}\r\n\r\n\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n    const data = await profileAPI.getStatus(userId);\r\n    dispatch(setUserStatus(data));\r\n}\r\n\r\n\r\nexport const updateUserStatus = (status) => async (dispatch) => {\r\n    const data = await profileAPI.updateStatus(status);\r\n    if (data.resultCode === 0) {\r\n        dispatch(setUserStatus(status));\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default profileReducer;","const ADD_MESSAGE = 'ADD-MESSAGE';\r\n\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: \"John\"},\r\n        {id: 2, name: \"Antony\"},\r\n        {id: 3, name: \"Mia\"},\r\n        {id: 4, name: \"Jessica\"},\r\n        {id: 5, name: \"Alex\"}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: \"Hi!\"},\r\n        {id: 2, message: \"Hello!\"},\r\n        {id: 3, message: \"How are you?\"},\r\n        {id: 4, message: \"Thanks, I'm fine.\"}\r\n    ]\r\n}\r\n\r\nconst messagesReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_MESSAGE : {\r\n            let message = {\r\n                id: 6,\r\n                message: action.newMessage\r\n            }\r\n            let stateCopy = {\r\n                ...state,\r\n                messages: [...state.messages, message]\r\n            };\r\n            return stateCopy;\r\n\r\n        }\r\n        default : {\r\n            return state;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const addNewMessageBodyCreator = (newMessage) => {\r\n    return {\r\n        type: ADD_MESSAGE,\r\n        newMessage\r\n    }\r\n}\r\n\r\nexport default messagesReducer;","import {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'users/FOLLOW';\r\nconst UNFOLLOW = 'users/UNFOLLOW';\r\nconst SET_USERS = 'users/SET-USERS';\r\nconst SET_CURRENT_PAGE = 'users/SET-CURRENT-PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'users/SET-TOTAL-USERS-COUNT';\r\nconst TOGGLE_IS_FETCHING = 'users/TOGGLE-IS-FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'users/TOGGLE-IS-FOLLOWING-PROGRESS'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    isFollowingProgress: []\r\n}\r\n\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            let stateCopy = {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: true}\r\n                    }\r\n                    return user;\r\n                })\r\n            }\r\n            return stateCopy;\r\n        }\r\n        case UNFOLLOW: {\r\n            let stateCopy = {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: false}\r\n                    }\r\n                    return user;\r\n                })\r\n            }\r\n            return stateCopy;\r\n        }\r\n        case SET_USERS: {\r\n            let stateCopy = {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n            return stateCopy;\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            let stateCopy = {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n            return stateCopy;\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            let stateCopy = {\r\n                ...state,\r\n                totalUsersCount: action.totalUsersCount\r\n            }\r\n            return stateCopy;\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            let stateCopy = {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n            return stateCopy;\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            let stateCopy = {\r\n                ...state,\r\n                isFollowingProgress: action.isFetching\r\n                    ? [...state.isFollowingProgress, action.userId]\r\n                    : state.isFollowingProgress.filter(id => id != action.userId)\r\n            }\r\n            return stateCopy;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const follow = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollow = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleIsFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nexport const getUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n        const data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleIsFollowingProgress(true, userId));\r\n    const data = await apiMethod(userId);\r\n    if (data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleIsFollowingProgress(false, userId));\r\n}\r\nexport const unfollowUser = (userId) => {\r\n    return async (dispatch) => {\r\n        const apiMethod = usersAPI.unfollowUser.bind(usersAPI);\r\n        const actionCreator = unfollow;\r\n        followUnfollowFlow(dispatch, userId, apiMethod, actionCreator);\r\n    }\r\n}\r\n\r\nexport const followUser = (userId) => {\r\n    return async (dispatch) => {\r\n        const apiMethod = usersAPI.followUser.bind(usersAPI);\r\n        const actionCreator = follow;\r\n        followUnfollowFlow(dispatch, userId, apiMethod, actionCreator);\r\n    }\r\n}\r\n\r\n// export const unfollowUser = (userId) => {\r\n//     return async (dispatch) => {\r\n//         dispatch(toggleIsFollowingProgress(true, userId));\r\n//         const data = await usersAPI.unfollowUser(userId);\r\n//         if (data.resultCode === 0) {\r\n//             dispatch(unfollow(userId));\r\n//         }\r\n//         dispatch(toggleIsFollowingProgress(false, userId));\r\n//     }\r\n// }\r\n//\r\n// export const followUser = (userId) => {\r\n//     return async (dispatch) => {\r\n//         dispatch(toggleIsFollowingProgress(true, userId));\r\n//         const data = await usersAPI.followUser(userId);\r\n//         if (data.resultCode === 0) {\r\n//             dispatch(follow(userId));\r\n//         }\r\n//         dispatch(toggleIsFollowingProgress(false, userId));\r\n//     }\r\n// }\r\n\r\nexport default usersReducer;","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"0283ad88-0b5d-4502-b0e0-83f1356d4474\"\r\n    }\r\n});\r\n\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`).then(response => response.data);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`).then(response => response.data);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status `, {status: status}).then(response => response.data);\r\n    },\r\n}\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 5) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => response.data);\r\n    },\r\n    unfollowUser(userId) {\r\n        return instance.delete(`follow/${userId}`, {}).then(response => response.data);\r\n    },\r\n    followUser(userId) {\r\n        return instance.post(`follow/${userId}`, {}, {}).then(response => response.data);\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    getUserData() {\r\n        return instance.get(`auth/me`).then(response => response.data);\r\n    },\r\n    logIn(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe}).then(response => response.data);\r\n    },\r\n    logOut() {\r\n        return instance.delete('auth/login').then(response => response.data);\r\n    }\r\n}"],"sourceRoot":""}